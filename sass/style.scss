/*註解*/
// sass 變數

//base
@import 'base/var';
@import 'base/color';
@import 'base/reset';

//mixin
@import 'mixin/mixins';

//modules

@import 'modules/button';
@import 'modules/form';
@import 'modules/table';

//layout
@import 'layout/header';
@import 'layout/footer';
@import 'layout/login';

//page
@import  'page/index/all';
@import  'page/aboutus/all';


//plugins
@import  './plugins/allplugin';

body {
    font-family: $font_family;
    margin: $margin;
    padding: $a * 1;
    background-color: $red;
    font-size: $null;
    color: map-get($bg-color, 'blues');

    @if $aa==true {
        border-radius: 10px;
    }
}

* {

    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

//  function name(){

//  }  





// nesting 巢狀寫法
.wrapper {
    width: 1200px;
    //呼叫
    @include marginAuto(#f0ed53);

    h1 {
        @include marginAuto(#333, #07ffac);
        font-size: 30px;
        color: map-get($bg-color, 'red');

        .title {
            font-size: 20px;
        }
    }

    span {
        font-size: 10px;
        color: #999;
    }

    .btn {
        width: 100px;
        height: 20px;
        padding: 10px;
        text-align: center;
        transition: .2s all ease-in-out;
        background-color: rgb(217, 255, 4);
        cursor: pointer;

        &:hover {
            background-color: rgb(143, 196, 0); // 偽元素   
        }

        &::before {
            content: ''; // 偽元素
        }
    }
}


//呼叫

.btn-wide {
    width: 120px;
    @include btns(60px, rgb(12, 114, 247), #00e4a0, 10px)
}

.btn-aa {
    @include btns(30px, rgb(0, 71, 0), rgb(224, 0, 0));
}


// 數值轉字串 #{}

@include push_left('.push', 200, aa) {
    border: 1px solid #00e4a0;
    padding-left: 10px;
   // @include box-sizing();
}


@include push_left('.pull', 100, bb) {
    margin-top: 100px;
   // @include box-sizing();
}


@include btnAll('.btn-wide', 250px, 10px, rgb(157, 255, 0));
@include btnAll('.btn-small', 150px, 8px, rgb(21, 255, 0));
@include btnAll('.btn-medium', 200px, 9px, rgb(0, 238, 255));


$a : 100;
$b : 20;

.box {
    width: 10 + 10px;
    height: 10px - 11;
    padding: 10 * 10 + px;
    font: ($a / $b) + px;
    margin: floor(100 / 3) + px; //無條件捨去
    font-size: ceil(100 / 3) + px; //無條件進位
    max-width: round(100 / 6) + px; //四捨五入
}


// $fontSize-basic : 12px;



@include fontSize(20px);



$width : 30;


.box2 {
    @if ($width < 100) {
        width: $width + px;
    }

    @else if ($width==110) {
        width: $width * 2 + px;
    }

    @else {
        width: ($width / 2) + px;
    }
}

// layout
@mixin layout($width) {
    @if $width==100 {
        .container-full {
            width: 100%;
            display: block;
            @content;
        }
    }

    @else {
        .container {
            width: $width + px;
            margin: 0 auto;
            @content;
        }
    }
}

@include layout(1366) {
    h1 {
        font-size: 20px;
    }
}






@include rwd(medium) {
    .box {
        width: 300px;
    }
}


@include rwd(small) {
    .box {
        width: 100px;

    }
}


//迴圈
@for $i from 1 through 100 {
    .push-#{$i} {
        position: relative;
        left: $i * 1px
    }
}



@include rwd(small) {
    @include push(top, 10);
}

// @include push(right, 100);
// @include push(left, 100);



//gird

// @for $i from 1 through 10 {
//     .col-md-#{$i} {
//         width: ($i / 10) * 100%;
//         display: inline-block;
//         background-color: rgb(1, 101, 252);
//     }
// }

// BEM 
.block {
    font-size: 10px;

    &__elem {
        color: #f20;

        &--modifty {
            margin: 10px;
        }
    }
}


//each

//$list: a1, a2, a3, b1 , b2; //list
$list: a1 a2 a3 b1 b2; //list

@each $imgURL in $list {
    .img-#{$imgURL} {
        background-image: url(./images/#{$imgURL}.jpg);
    }
}

@mixin rect($w, $h:$w) {
    width: $w;
    height: $h;
}


@mixin imgUrl($list, $style, $w , $h:$w) {
    @each $imgURL in $list {
        .img-#{$imgURL} {
            background-image: url(./images/#{$imgURL}.#{$style});
            background-size: cover;
            display: block;
            @include rect($w, $h)
        }
    }
}

//
@include imgUrl(d01 d02 d3 d4 , jpg ,600px , 400px);
@include imgUrl(e01 e02 e3 e4 , png ,300px );


.box-rect {
    @include rect(200px, 300px)
}

//map 型別
$font-title : ('h1' : 30px, // key : value
    'h2' : 20px,
    'h3' : 18px,
    'h4' : 15px,
    'h5' : 12px); //map

@each $key,
$val in $font-title {
    #{$key} {
        font-size: $val;
    }
}

// map 取值


.box-4 {
    width: (4/12) * 100%;
}

.box-8 {
    width: (8/12) * 100%;
}

//grid 組件
@mixin grid($num, $res:null) {
    @for $i from 1 through $num {
        .col-#{$res}#{$i} {
            width: ($i / $num) * 100%;
            display: inline-block;

        }
    }
}



@include grid(16);

@include rwd(desktop) {
    @include grid(16, xl-);
}

@include rwd(medium) {
    @include grid(16, md-);
}

@include rwd(small) {
    @include grid(16, sm-);
}



$brand-primary: darken(#428bca, 6.5%) ; // #337ab7
$brand-success: #0cd10c ;
$brand-info: #5bc0de !default;
$brand-warning: #f0ad4e !default;
$brand-danger: #d9534f !default;



$color : ('primary' : #428bca,
    'success' : #5cb85c,
    'info' : #5bc0de,
    'warning' : #f0ad4e,
    'danger' : #d9534f,
    'stop' : #333,
    'status' : #1eff96
    );



$color-A : ('primary-A' : #85fa00,
    'success-A' : #2331f8,
    'info-A' : #f5dc00,
    'warning-A' : #f0ad4e,
    'danger-A' : #f10800,
    'stop-A' : #f700ff,
    'status-A' : #1eff96
    );    





@mixin color($color, $colorStyle:color) {

    @each $key, $val in $color {
        .color-#{$key} {
            @if $colorStyle == color {
                color: $val
            }

            @else {
                background-color: $val;
            }
        }
    }
}

@include color($color , bgc);


@mixin prefix ($key , $val){
    #{$key}: $val;
    -webkit-#{$key}: $val;
    -o-#{$key}: $val;
}

.box {
   @include prefix(transition, all 0.3s);
   @include prefix(user-select , none);
}

@mixin red {
        color: red    
}




.red {
    color: red
}
.blue {
    color: blue;
}

.fontSize-default {
   font-size: 16px;
   font-weight: 400; 
}


.boxRed {
    @include rect(300px,200px);
    //@include red();
    @extend .red  ; 
    @extend .fontSize-default;
}


.boxBlue {
     @include rect(300px);
     @extend .blue;
     @extend .fontSize-default;
}

.box{
    @include rect(300px);
}






// @include color($color-A , bgcolor);